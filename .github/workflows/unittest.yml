name: Unittests
run-name: Unittests for ${{ github.sha }}
on: [push]

jobs:
  tests:
    timeout-minutes: 10
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Create venv and install Python
        run: uv venv --python ${{ matrix.python-version }}
      - name: Install packages with uv
        run: uv pip install -r pyproject.toml --all-extras
      - name: Activate venv on non-Windows
        if: ${{ runner.os != 'Windows' }}
        run: |
          . .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV
      - name: Activate venv on Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          pwsh .venv/Scripts/activate.ps1
          "VIRTUAL_ENV=.venv" | Out-File -FilePath $env:GITHUB_ENV -Append
      - name: Display Python version for testing purposes
        run: python --version
      - name: Run unittests with pytest
        run: python -m pytest -v
        working-directory: .
      - name: Install nbmake
        run: uv pip install nbmake
      - name: pytest notebooks
        run: python -m pytest --nbmake Readme.ipynb
        working-directory: .